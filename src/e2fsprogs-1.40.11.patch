diff -ru e2fsprogs-1.40.11/config/config.guess e2fsprogs-1.40.11.new/config/config.guess
--- e2fsprogs-1.40.11/config/config.guess	2007-06-30 12:58:34 +0000
+++ e2fsprogs-1.40.11.new/config/config.guess	2025-07-12 18:24:28 +0000
@@ -1295,6 +1295,9 @@
     i*86:rdos:*:*)
 	echo ${UNAME_MACHINE}-pc-rdos
 	exit ;;
+    i*86:Fiwix:*:*)
+	echo ${UNAME_MACHINE}-pc-fiwix
+	exit 0 ;;
 esac
 
 #echo '(No uname command or uname output not recognized.)' 1>&2
diff -ru e2fsprogs-1.40.11/config/config.sub e2fsprogs-1.40.11.new/config/config.sub
--- e2fsprogs-1.40.11/config/config.sub	2007-06-30 12:58:34 +0000
+++ e2fsprogs-1.40.11.new/config/config.sub	2025-07-12 18:24:45 +0000
@@ -1217,7 +1217,7 @@
 	      | -os2* | -vos* | -palmos* | -uclinux* | -nucleus* \
 	      | -morphos* | -superux* | -rtmk* | -rtmk-nova* | -windiss* \
 	      | -powermax* | -dnix* | -nx6 | -nx7 | -sei* | -dragonfly* \
-	      | -skyos* | -haiku* | -rdos*)
+	      | -skyos* | -haiku* | -rdos* | -fiwix*)
 	# Remember, each alternative MUST END IN *, to match a version number.
 		;;
 	-qnx*)
diff -ru e2fsprogs-1.40.11/debugfs/util.c e2fsprogs-1.40.11.new/debugfs/util.c
--- e2fsprogs-1.40.11/debugfs/util.c	2008-06-18 01:53:14 +0000
+++ e2fsprogs-1.40.11.new/debugfs/util.c	2025-07-12 18:26:09 +0000
@@ -22,7 +22,7 @@
 extern char *optarg;
 #endif
 #ifdef HAVE_OPTRESET
-extern int optreset;		/* defined by BSD, but not others */
+int optreset;		/* defined by BSD, but not others */
 #endif
 
 #include "debugfs.h"
diff -ru e2fsprogs-1.40.11/e2fsck/unix.c e2fsprogs-1.40.11.new/e2fsck/unix.c
--- e2fsprogs-1.40.11/e2fsck/unix.c	2008-06-18 01:53:14 +0000
+++ e2fsprogs-1.40.11.new/e2fsck/unix.c	2025-07-12 18:31:32 +0000
@@ -1347,7 +1347,7 @@
 		    printf(_("\n%s: ***** FILE SYSTEM WAS MODIFIED *****\n"),
 			       ctx->device_name);
 		if (ctx->mount_flags & EXT2_MF_ISROOT) {
-			printf(_("%s: ***** REBOOT LINUX *****\n"),
+			printf(_("%s: ***** REBOOT SYSTEM *****\n"),
 			       ctx->device_name);
 			exit_value |= FSCK_REBOOT;
 		}
diff -ru e2fsprogs-1.40.11/lib/ext2fs/llseek.c e2fsprogs-1.40.11.new/lib/ext2fs/llseek.c
--- e2fsprogs-1.40.11/lib/ext2fs/llseek.c	2008-02-19 04:33:10 +0000
+++ e2fsprogs-1.40.11.new/lib/ext2fs/llseek.c	2025-07-12 18:26:09 +0000
@@ -119,18 +119,29 @@
 #define EINVAL EXT2_ET_INVALID_ARGUMENT
 #endif
 
+static ext2_loff_t my_llseek (int fd, ext2_loff_t offset, int origin)
+{
+	ext2_loff_t result;
+	int retval;
+
+	retval = llseek(fd, (unsigned long long) (offset >> 32),
+			  ((unsigned long long) offset) & 0xffffffff,
+			&result, origin);
+	return (retval == -1 ? (ext2_loff_t) retval : result);
+}
 ext2_loff_t ext2fs_llseek (int fd, ext2_loff_t offset, int origin)
 {
-#if defined(HAVE_LSEEK64) && defined(HAVE_LSEEK64_PROTOTYPE)
-	return lseek64 (fd, offset, origin);
-#else
-	if ((sizeof(off_t) < sizeof(ext2_loff_t)) &&
-	    (offset >= ((ext2_loff_t) 1 << ((sizeof(off_t)*8) -1)))) {
-		errno = EINVAL;
-		return -1;
-	}
-	return lseek (fd, (off_t) offset, origin);
-#endif
+	ext2_loff_t result;
+
+	if ((sizeof(off_t) >= sizeof(ext2_loff_t)) ||
+	    (offset < ((ext2_loff_t) 1 << ((sizeof(off_t)*8) -1))))
+		return lseek(fd, (off_t) offset, origin);
+
+	result = my_llseek (fd, offset, origin);
+	if (result == -1 && errno == ENOSYS) {
+ 		errno = EINVAL;
+ 	}
+	return result;
 }
 
 #endif 	/* linux */
diff -ru e2fsprogs-1.40.11/lib/ext2fs/tdb.c e2fsprogs-1.40.11.new/lib/ext2fs/tdb.c
--- e2fsprogs-1.40.11/lib/ext2fs/tdb.c	2008-04-02 15:56:12 +0000
+++ e2fsprogs-1.40.11.new/lib/ext2fs/tdb.c	2025-07-12 18:30:28 +0000
@@ -1749,6 +1749,7 @@
 		TDB_LOG((tdb, TDB_DEBUG_FATAL, "tdb_transaction: fsync failed\n"));
 		return -1;
 	}
+#ifndef __fiwix__
 #ifdef MS_SYNC
 	if (tdb->map_ptr) {
 		tdb_off_t moffset = offset & ~(tdb->page_size-1);
@@ -1761,6 +1762,7 @@
 		}
 	}
 #endif
+#endif	/* ! __fiwix__ */
 	return 0;
 }
 
diff -ru e2fsprogs-1.40.11/misc/mke2fs.c e2fsprogs-1.40.11.new/misc/mke2fs.c
--- e2fsprogs-1.40.11/misc/mke2fs.c	2008-06-18 01:53:14 +0000
+++ e2fsprogs-1.40.11.new/misc/mke2fs.c	2025-07-12 18:30:57 +0000
@@ -1019,6 +1019,12 @@
 	if (linux_version_code && linux_version_code < (2*65536 + 2*256))
 		fs_param.s_rev_level = 0;
 #endif
+#ifdef __fiwix__
+	fs_param.s_rev_level = 0;
+	fs_param.s_feature_incompat = 0;
+	fs_param.s_feature_compat = 0;
+	fs_param.s_feature_ro_compat = 0;
+#endif /* __fiwix__ */
 
 	if (argc && *argv) {
 		program_name = get_progname(*argv);
